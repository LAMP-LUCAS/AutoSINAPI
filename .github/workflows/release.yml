name: Release

on:
  push:
    tags:
      - 'v*' # Aciona o workflow em tags como v1.0, v1.2.3, etc.

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Permissão necessária para a action criar a release

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Create GitHub Release and Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          # Usa o nome da tag (ex: v1.2.0) como nome da release
          name: Release ${{ github.ref_name }}
          # Gera o corpo da release automaticamente a partir dos commits
          generate_release_notes: true
          # Faz o upload de TODOS os arquivos do diretório dist/*
          files: ./dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish package to PyPI
        run: twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}